(ns elementary.core
  (:gen-class))

;; initial elementary 4clojure.com problems

;; prob 1
;;  If we list all the natural numbers below 10 that are multiples 
;;  of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
;;  Find the sum of all the multiples of 3 or 5 below 1000.

;; prob 2
;;  Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
;;  By starting with 1 and 2, the first 10 terms will be:
;;     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;;  By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
;;  find the sum of the even-valued terms.

(defn fibo-seq [n] (nth (iterate #(conj % (apply + (take-last 2 %))) [0 1]) n))

;; prob 3
;;  The prime factors of 13195 are 5, 7, 13 and 29.
;;  What is the largest prime factor of the number 600851475143 ?
;;
(defn factors [n] (map #(/ n %) (filter #(zero? (mod n %)) (range 1 (inc n)))))

;; prob 4
;;  A palindromic number reads the same both ways. 
;;  The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 99.
;;  Find the largest palindrome made from the product of two 3-digit numbers.


;; prob 5
;;  2520 is the smallest number that can be divided 
;;  by each of the numbers from 1 to 10 without any remainder.
;;  What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?


(defn all-div? [n r] (every? zero? (map #(mod n %) r)))

(defn prob-5 [] (first (filter #(all-div? % (range 3 21)) (range 200000000 300000000 2))))

;; prob 6
;;  The sum of the squares of the first ten natural numbers is,
;;        12 + 22 + ... + 102 = 385
;;  The square of the sum of the first ten natural numbers is,
;;        (1 + 2 + ... + 10)2 = 552 = 3025
;;  Hence the difference between the sum of the squares of the first ten natural numbers 
;;  and the square of the sum is 3025  385 = 2640.
;;  Find the difference between the sum of the squares of the first one hundred natural numbers 
;;  and the square of the sum.
;;
(defn square-of-sums [n] (* (apply + (range 1 (inc n))) (apply + (range 1 (inc n)))))
(defn sum-of-squares [n] (apply + (map #(* % %) (range 1 (+ n 1)))))

(defn prob-6 [n] (- (square-of-sums n) (sum-of-squares n)))

;; prob 7
;; By listing the first six prime numbers: 
;;    2, 3, 5, 7, 11, and 13, 
;;    we can see that the 6th prime is 13.
;; What is the 10001st prime number?
(defn is-prime? [n] (= (count (factors n)) 2))
(defn nth-prime [n max-n]  (nth (filter #(is-prime? %) (range 1 max-n)) (dec n)))

;; prob 8
;;  Find the greatest product of five consecutive digits in the 1000-digit number.
(def huge-number "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450")

(defn chunks-of-n [s n] (map #(subs s % (+ n %)) (range 0 (- (count s) (dec n)))))
(defn product-of-string-numbers [s] (apply * (map #(Integer. %) (re-seq #"\d" s))))
(defn prob-8 [] (last (sort (map #(product-of-string-numbers %) (chunks-of-n huge-number 5)))))


;; prob 9
;; A Pythagorean triplet is a set of three natural numbers, a  b  c, for which,
;; a^2 + b^2 = c^2
;; For example, 3^2 + 4^2 = 9 + 16 = 25 = 5^2.
;; There exists exactly one Pythagorean triplet for which a + b + c = 1000.
;; Find the product abc.

(defn sqr [n] (* n n))
(defn pythagorean-triplet? [[a b c]] (= (+ (sqr a) (sqr b)) (sqr c)))


